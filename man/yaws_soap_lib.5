.TH YAWS_SOAP_LIB "5" "" "" "Yaws Soap API"
.SH NAME
yaws_soap_lib \- api for the yaws soap-functionality
.SH SYNOPSIS
.B yaws_soap_lib:Function(...)

.SH DESCRIPTION

.PP
This is the Yaws api available for dealing with SOAP.

.SH API

.TP
\fcall(WsdlURL, Operation, ListOfData)\fR
This function takes an ('http' or 'file' URL to a WSDL file,
an Operation (i.e. Function) to be called and a list of
data to that the Operation takes as input argument.
Note: that this function makes the assumption that the
record used for the body, has the same name as the Operation.
For example, if the Operation is named "GetTime", then the
record it assumed to be named 'p:GetTime', where 'p' is the
default prefix used.

.TP
\fcall(Wsdl, Operation, ListOfData)\fR
Takes a Wsdl structure, as returned from the initModel/1 function,
instead of an URL. Else, it works just like the other call/3 function.

.TP
\fcall(Wsdl, Operation, ListOfData)\fR
Takes a Wsdl structure, as returned from the initModel/1 function,
instead of an URL. Else, it works just like the other call/3 function.

.TP
\fcall(Wsdl, Operation, HeaderMsg, BodyMsg)\fR
The Wsdl and Operation arguments works just as for the call/3 function.
The HeaderMsg and BodyMsg can be either a record, representing a message,
or a list of such records. The records can be generated by the write_hrl/2
function.

.TP
\fcall(Wsdl, Operation, Port, Service, HeaderMsg, BodyMsg)\fR
The Wsdl, Operation, HeaderMsg and BodyMsg argument works as for
the call/4 function. The Port and Service argument is used for pointing
out the particular definitions of the corresponding entries in the WSDl
specification used.

.TP
\fis_wsdl(Wsdl)\fR
Returns true if the Wsdl argument is a Wsdl structure, as returned from
the initModel/1 function.

.TP
\fwsdl_model(Wsdl)\fR
Returns the Model.

.TP
\fwsdl_operations(Wsdl)\fR
Returns a list of Operations.

.TP
\fwsdl_op_service(Wsdl)\fR
Returns the Service.

.TP
\fwsdl_op_port(Operation)\fR
Returns the port.

.TP
\fwsdl_op_operation(Operation) -> Op.\fR
Returns the operation.

.TP
\fwsdl_op_binding(Operation) -> Binding.\fR
Returns the binding.

.TP
\fwsdl_op_address(Operation) -> Address.\fR
Returns the address.

.TP
\fwsdl_op_action(Operation)\fR
Returns the action.


.TP
\finitModel(WsdlURL)\fR
Takes an URL pointing to an WSDL file. This function will
retrieve the file, parse it and return a Wsdl structure that
is used as argument to many of the other functions in this module.
It will use the default prefix 'p' for the elements/attributes of
the target namespace.

.TP
\finitModel(WsdlURL, Prefix)\fR
Works as the initModel/1 function but takes another prefix to be used.

.TP
\fwriteHrl(WsdlURL, HrlFilename)\fR
Takes an URL pointing to an WSDL file. Will produce a file containing
erlang records that corresponds to the elements and datatypes in the
WSDL file. This '.hrl' file can then be included in your own Erlang code,
for easy manipulation of the SOAP data.

.TP
\fwriteHrl(WsdlURL, HrlFilename, Prefix)\fR
Works as the writeHrl/2 function but takes another prefix to be used.


.SH AUTHOR
Written by Torbjorn Tornkvist
.SH "SEE ALSO"
.BR yaws.conf (5)









