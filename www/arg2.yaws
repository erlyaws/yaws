
<erl>


out(A) ->

    Peer = A#arg.client_ip_port,
    Req = A#arg.req,
    H = yaws_api:reformat_header(A#arg.headers),
    {ehtml,
     [{h5,[], "The headers passed to us were:"},
      {hr,[],[]},
      {ol, [],lists:map(fun(S) -> {li,[], {p,[],S}} end,H)},

      {h5, [], "The request"},
      {ul,[],
       [{li,[], f("method: ~s", [Req#http_request.method])},
        {li,[], f("path: ~p", [Req#http_request.path])},
        {li,[], f("version: ~p", [Req#http_request.version])}]},

      {hr,[],[]},
      {h5, [], "Other items"},
      {ul,[],
       [{li, [], f("Peer: ~p", [Peer])},
        {li,[], f("docroot: ~s", [A#arg.docroot])},
        {li,[], f("fullpath: ~s", [A#arg.fullpath])}]},
      {hr,[],[]},
      {h5, [], "Parsed query data"},
      {pre,[], f("~p", [yaws_api:parse_query(A)])},
      {hr,[],[]},
      {h5,[], "Parsed POST data "},
      {pre,[],  f("~p", [yaws_api:parse_post(A)])}]}.

</erl>



